# -*- coding: utf-8 -*-
"""Proyek_Analisis_Data_Arif.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/rifkurniawan-dev/projek_arif/blob/main/Proyek_Analisis_Data_Arif.ipynb

# Proyek Analisis Data: E-Commerce Public Datasat
- **Nama:** Arif Kurniawan
- **Email:** m299d5y1908@student.devacaademy.id
- **ID Dicoding:** MC299D5Y1908

## Pertanyaan

- Bagaimana pengaruh musim terhadap jumlah penyewaan sepeda

- bagaimana pengaruh cuaca terhadap jumlah penyewaan sepeda

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

day_df = pd.read_csv("day.csv")
day_df.head()

hour_df = pd.read_csv("hour.csv")
hour_df.head()

"""### Assessing Data

Menilai day
"""

day_df.info()

day_df.isna().sum()

print("Jumlah duplikasi: ", day_df.duplicated().sum())

day_df.describe()

"""Menilai Hour"""

hour_df.info()

hour_df.isna().sum()

print("Jumlah duplikasi: ", hour_df.duplicated().sum())

hour_df.describe()

"""### Cleaning Data

Duplicat day
"""

day_df.info()

"""memperbaiki type data"""

datetime_columns = ["dteday"]
for coloumn in datetime_columns:
  day_df[coloumn] = pd.to_datetime(day_df[coloumn])

day_df.head()

"""Duplikat Hour"""

hour_df.info()

"""memperbaiki type data"""

datetime_columns = ["dteday"]
for coloumn in datetime_columns:
  hour_df[coloumn] = pd.to_datetime(hour_df[coloumn])

hour_df.info()

hour_df.head()

"""menggabungkan Hour & day"""

day_hour_df = pd.merge(
    left=hour_df,
    right=day_df,
    how="outer",
    left_on="instant",
    right_on="instant"
)
day_hour_df.head()

day_hour_df.nunique()

day_hour_df.isna().sum()

"""## Exploratory Data Analysis (EDA)

### Explore ...
"""

day_df.sample(5)

day_df.describe(include="all")

day_df.instant.is_unique

day_df.groupby(by='dteday').agg({
    'instant': 'nunique',
    'temp': ['max', 'min', 'mean', 'std'],
    'hum': ['max', 'min', 'mean', 'std'],
    'windspeed': ['max', 'min', 'mean', 'std'],
    'cnt': ['max', 'min', 'mean', 'std']
})

day_df.groupby(by="season").instant.nunique().sort_values(ascending=False)
day_df.groupby(by="weathersit").instant.nunique().sort_values(ascending=False)

hour_df.sample(5)

hour_df.describe(include="all")

hour_df.head()

day_df.groupby(by="weathersit").instant.nunique().sort_values(ascending=False)
day_df.groupby(by="mnth").instant.nunique().sort_values(ascending=False)

"""## Explore day_df & hour_df"""

instant_in_hour_df =  hour_df.instant.tolist()
day_df["status"] = day_df["instant"].apply(lambda x: "Active" if x in instant_in_hour_df else "Non Active")
day_df.sample(5)

day_df.groupby(by="status").instant.count()

hour_day_df = pd.merge(
    left= hour_df,
    right=day_df,
    how="left",
    left_on="instant",
    right_on="instant"
)
hour_day_df.head()

"""jumlah berdasarkan musim"""

hour_day_df.groupby(by="season_x").instant.nunique().sort_values(ascending=False).reset_index().head(10)

"""jumlah berdasarkan cuaca"""

hour_day_df.groupby(by="weathersit_x").instant.nunique().sort_values(ascending=False).reset_index().head(10)

hour_day_df.to_csv("hour_day.csv", index=False)

"""Menghubungkan semua

## Visualization & Explanatory Analysis

Bagaimana pengaruh musim terhadap jumlah penyewaan sepeda
"""

hour_day_df.sample(5)

day_df.head()

monthly_day_df = hour_day_df.resample(rule='ME', on='dteday_x').agg({
    'instant': 'nunique',
    'cnt_x': 'sum',
    'season_x': 'first'
})
monthly_day_df.index = monthly_day_df.index.strftime('%Y-%m')
monthly_day_df = monthly_day_df.reset_index()
monthly_day_df.rename(columns={
    'instant': 'day_count',
    'cnt_x': 'total_rentals',
    'season_x': 'season'
}, inplace=True)
monthly_day_df.head()

plt.figure(figsize=(10, 5))
sns.barplot(
    x='dteday_x',
    y='day_count',
    hue='season',
    data=monthly_day_df,
    palette="Set2"
)
plt.title("Jumlah Penyewaan Sepeda per Musim dan Bulan (2011-2012)", loc="center", fontsize=20)
plt.xlabel("Bulan", fontsize=12)
plt.ylabel("Jumlah Penyewaan", fontsize=12)
plt.xticks(rotation=45, fontsize=10)
plt.yticks(fontsize=10)
plt.show()

plt.figure(figsize=(10, 6))
sns.barplot(x='season', y='cnt', data=hour_df, color="#72BCD4")
plt.title('Rata-rata Jumlah Penyewaan Sepeda Berdasarkan Musim', fontsize=16)
plt.xlabel('Musim', fontsize=14)
plt.ylabel('Rata-rata Jumlah Penyewaan Sepeda', fontsize=14)
plt.xticks([0, 1, 2, 3], ['Musim Dingin', 'Musim Semi', 'Musim Panas', 'Musim Gugur'])
plt.show()

"""bagaimana pengaruh cuaca terhadap jumlah penyewaan sepeda"""

bygeder_df = hour_day_df.groupby(by="weathersit_x").cnt_x.sum().reset_index()
bygeder_df.rename(columns={
    "cnt_x": "total_rentals"
}, inplace=True)
bygeder_df

plt.figure(figsize=(10, 6))
sns.barplot(x='weathersit_x', y='cnt_x', data=hour_day_df, hue='weathersit_x', palette="Blues", dodge=False, legend=False)
plt.title("Pengaruh Cuaca Terhadap Jumlah Penyewaan Sepeda", fontsize=20)
plt.xlabel("Kondisi Cuaca", fontsize=12)
plt.ylabel("Rata-rata Penyewaan Sepeda", fontsize=12)
plt.xticks(rotation=30, fontsize=10)
plt.yticks(fontsize=10)
plt.show()